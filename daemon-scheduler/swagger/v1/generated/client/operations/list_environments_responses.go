// Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/goguardian/blox/daemon-scheduler/swagger/v1/generated/models"
)

// ListEnvironmentsReader is a Reader for the ListEnvironments structure.
type ListEnvironmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEnvironmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListEnvironmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListEnvironmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListEnvironmentsOK creates a ListEnvironmentsOK with default headers values
func NewListEnvironmentsOK() *ListEnvironmentsOK {
	return &ListEnvironmentsOK{}
}

/*ListEnvironmentsOK handles this case with default header values.

OK
*/
type ListEnvironmentsOK struct {
	Payload *models.Environments
}

func (o *ListEnvironmentsOK) Error() string {
	return fmt.Sprintf("[GET /environments][%d] listEnvironmentsOK  %+v", 200, o.Payload)
}

func (o *ListEnvironmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Environments)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEnvironmentsBadRequest creates a ListEnvironmentsBadRequest with default headers values
func NewListEnvironmentsBadRequest() *ListEnvironmentsBadRequest {
	return &ListEnvironmentsBadRequest{}
}

/*ListEnvironmentsBadRequest handles this case with default header values.

Bad Request
*/
type ListEnvironmentsBadRequest struct {
	Payload string
}

func (o *ListEnvironmentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /environments][%d] listEnvironmentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListEnvironmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
